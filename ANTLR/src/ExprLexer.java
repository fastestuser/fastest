// Generated from Expr.g4 by ANTLR 4.0

	import java.util.HashMap;
	import java.util.ArrayList;
	import java.util.regex.Matcher;
	import java.util.regex.Pattern;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__48=1, T__47=2, T__46=3, T__45=4, T__44=5, T__43=6, T__42=7, T__41=8, 
		T__40=9, T__39=10, T__38=11, T__37=12, T__36=13, T__35=14, T__34=15, T__33=16, 
		T__32=17, T__31=18, T__30=19, T__29=20, T__28=21, T__27=22, T__26=23, 
		T__25=24, T__24=25, T__23=26, T__22=27, T__21=28, T__20=29, T__19=30, 
		T__18=31, T__17=32, T__16=33, T__15=34, T__14=35, T__13=36, T__12=37, 
		T__11=38, T__10=39, T__9=40, T__8=41, T__7=42, T__6=43, T__5=44, T__4=45, 
		T__3=46, T__2=47, T__1=48, T__0=49, NAME=50, NUM=51, IN_FUN_P3=52, IN_FUN_P4=53, 
		NL=54, WS=55, SETSTART=56, SETEND=57, SKIP=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'\\lnot'", "']'", "'\\#'", "','", "'\\rel'", "'['", "':'", "'('", "'<'", 
		"'\\pfun'", "'false'", "'\\lor'", "'\\dom'", "'\\end{schema}'", "'\\end{zed}'", 
		"'\\ran'", "'\\upto'", "'\\in'", "'\\ffun'", "'}'", "'\\begin{schema}{'", 
		"'\\begin{axdef}'", "'true'", "'\\notin'", "'\\subset'", "'\\power'", 
		"')'", "'\\iff'", "'\\land'", "'\\end{axdef}'", "'@'", "'\\implies'", 
		"'\\fun'", "'\\seq'", "'='", "'\\leq'", "';'", "'\\neq'", "'\\nat'", "'>'", 
		"'\\geq'", "'\\where'", "'\\begin{zed}'", "'\\num'", "'=='", "'~'", "'::='", 
		"'|'", "'\\mapsto'", "NAME", "NUM", "IN_FUN_P3", "IN_FUN_P4", "NL", "WS", 
		"'\\{'", "'\\}'", "SKIP"
	};
	public static final String[] ruleNames = {
		"T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", "T__41", 
		"T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", "T__33", 
		"T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25", 
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"NAME", "NUM", "IN_FUN_P3", "IN_FUN_P4", "NL", "WS", "SETSTART", "SETEND", 
		"SKIP"
	};


		String type;
		int varNumber = 0;
		HashMap memory = new HashMap(); //En memory se guardan las variables y expressiones leidas
		HashMap types = new HashMap();	//En types se guarda informacion sobre los tipos definidos
		int modoSetExpression = 0; //0 = false, 1 = true
		String setExpressionDecl, setExpressionPred, setExpressionExpr;
		ArrayList setExpressionVars;

		String salida = new String();
		public String getSalida() {
			return salida;
		}

		public void print(String c) {
			if (modoSetExpression == 0) 
				/*System.out.println(c + " &");*/salida = salida.concat(c + " &");
			else if (modoSetExpression == 1)
				setExpressionDecl = setExpressionDecl.concat(" & " + c);
			else if (modoSetExpression == 2)
				setExpressionPred = setExpressionPred.concat(" & " + c);
			else if (modoSetExpression == 3)
				setExpressionExpr = setExpressionExpr.concat(" & " + c);
		}


	public ExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 54: WS_action((RuleContext)_localctx, actionIndex); break;

		case 57: SKIP_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip(); break;
		}
	}
	private void SKIP_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip(); break;
		}
	}

	public static final String _serializedATN =
		"\2\4<\u01c1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6"+
		"\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3"+
		"#\3#\3#\3#\3#\3$\3$\3%\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3("+
		"\3(\3(\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,"+
		"\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\60\3\60\3\61"+
		"\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63"+
		"\6\63\u0187\n\63\r\63\16\63\u0188\3\63\7\63\u018c\n\63\f\63\16\63\u018f"+
		"\13\63\3\64\6\64\u0192\n\64\r\64\16\64\u0193\3\65\3\65\3\65\3\65\3\65"+
		"\5\65\u019b\n\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\5\66\u01aa\n\66\3\67\5\67\u01ad\n\67\3\67\3\67\38\68\u01b2"+
		"\n8\r8\168\u01b3\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3;\2<\3\3\1\5\4\1\7"+
		"\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33"+
		"\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1"+
		"\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1"+
		"I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64"+
		"\1g\65\1i\66\1k\67\1m8\1o9\2q:\1s;\1u<\3\3\2\5\4C\\c|\4--//\5\13\13\17"+
		"\17\"\"\u01cb\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2"+
		"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2"+
		"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2"+
		"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2"+
		"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2"+
		"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3"+
		"\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2"+
		"\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2\2\2\5"+
		"}\3\2\2\2\7\177\3\2\2\2\t\u0082\3\2\2\2\13\u0084\3\2\2\2\r\u0089\3\2\2"+
		"\2\17\u008b\3\2\2\2\21\u008d\3\2\2\2\23\u008f\3\2\2\2\25\u0091\3\2\2\2"+
		"\27\u0097\3\2\2\2\31\u009d\3\2\2\2\33\u00a2\3\2\2\2\35\u00a7\3\2\2\2\37"+
		"\u00b4\3\2\2\2!\u00be\3\2\2\2#\u00c3\3\2\2\2%\u00c9\3\2\2\2\'\u00cd\3"+
		"\2\2\2)\u00d3\3\2\2\2+\u00d5\3\2\2\2-\u00e5\3\2\2\2/\u00f3\3\2\2\2\61"+
		"\u00f8\3\2\2\2\63\u00ff\3\2\2\2\65\u0107\3\2\2\2\67\u010e\3\2\2\29\u0110"+
		"\3\2\2\2;\u0115\3\2\2\2=\u011b\3\2\2\2?\u0127\3\2\2\2A\u0129\3\2\2\2C"+
		"\u0132\3\2\2\2E\u0137\3\2\2\2G\u013c\3\2\2\2I\u013e\3\2\2\2K\u0143\3\2"+
		"\2\2M\u0145\3\2\2\2O\u014a\3\2\2\2Q\u014f\3\2\2\2S\u0151\3\2\2\2U\u0156"+
		"\3\2\2\2W\u015d\3\2\2\2Y\u0169\3\2\2\2[\u016e\3\2\2\2]\u0171\3\2\2\2_"+
		"\u0173\3\2\2\2a\u0177\3\2\2\2c\u0179\3\2\2\2e\u0186\3\2\2\2g\u0191\3\2"+
		"\2\2i\u019a\3\2\2\2k\u01a9\3\2\2\2m\u01ac\3\2\2\2o\u01b1\3\2\2\2q\u01b7"+
		"\3\2\2\2s\u01ba\3\2\2\2u\u01bd\3\2\2\2wx\7^\2\2xy\7n\2\2yz\7p\2\2z{\7"+
		"q\2\2{|\7v\2\2|\4\3\2\2\2}~\7_\2\2~\6\3\2\2\2\177\u0080\7^\2\2\u0080\u0081"+
		"\7%\2\2\u0081\b\3\2\2\2\u0082\u0083\7.\2\2\u0083\n\3\2\2\2\u0084\u0085"+
		"\7^\2\2\u0085\u0086\7t\2\2\u0086\u0087\7g\2\2\u0087\u0088\7n\2\2\u0088"+
		"\f\3\2\2\2\u0089\u008a\7]\2\2\u008a\16\3\2\2\2\u008b\u008c\7<\2\2\u008c"+
		"\20\3\2\2\2\u008d\u008e\7*\2\2\u008e\22\3\2\2\2\u008f\u0090\7>\2\2\u0090"+
		"\24\3\2\2\2\u0091\u0092\7^\2\2\u0092\u0093\7r\2\2\u0093\u0094\7h\2\2\u0094"+
		"\u0095\7w\2\2\u0095\u0096\7p\2\2\u0096\26\3\2\2\2\u0097\u0098\7h\2\2\u0098"+
		"\u0099\7c\2\2\u0099\u009a\7n\2\2\u009a\u009b\7u\2\2\u009b\u009c\7g\2\2"+
		"\u009c\30\3\2\2\2\u009d\u009e\7^\2\2\u009e\u009f\7n\2\2\u009f\u00a0\7"+
		"q\2\2\u00a0\u00a1\7t\2\2\u00a1\32\3\2\2\2\u00a2\u00a3\7^\2\2\u00a3\u00a4"+
		"\7f\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7o\2\2\u00a6\34\3\2\2\2\u00a7\u00a8"+
		"\7^\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7f\2\2\u00ab"+
		"\u00ac\7}\2\2\u00ac\u00ad\7u\2\2\u00ad\u00ae\7e\2\2\u00ae\u00af\7j\2\2"+
		"\u00af\u00b0\7g\2\2\u00b0\u00b1\7o\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3"+
		"\7\177\2\2\u00b3\36\3\2\2\2\u00b4\u00b5\7^\2\2\u00b5\u00b6\7g\2\2\u00b6"+
		"\u00b7\7p\2\2\u00b7\u00b8\7f\2\2\u00b8\u00b9\7}\2\2\u00b9\u00ba\7|\2\2"+
		"\u00ba\u00bb\7g\2\2\u00bb\u00bc\7f\2\2\u00bc\u00bd\7\177\2\2\u00bd \3"+
		"\2\2\2\u00be\u00bf\7^\2\2\u00bf\u00c0\7t\2\2\u00c0\u00c1\7c\2\2\u00c1"+
		"\u00c2\7p\2\2\u00c2\"\3\2\2\2\u00c3\u00c4\7^\2\2\u00c4\u00c5\7w\2\2\u00c5"+
		"\u00c6\7r\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8\7q\2\2\u00c8$\3\2\2\2\u00c9"+
		"\u00ca\7^\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7p\2\2\u00cc&\3\2\2\2\u00cd"+
		"\u00ce\7^\2\2\u00ce\u00cf\7h\2\2\u00cf\u00d0\7h\2\2\u00d0\u00d1\7w\2\2"+
		"\u00d1\u00d2\7p\2\2\u00d2(\3\2\2\2\u00d3\u00d4\7\177\2\2\u00d4*\3\2\2"+
		"\2\u00d5\u00d6\7^\2\2\u00d6\u00d7\7d\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9"+
		"\7i\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7}\2\2\u00dc"+
		"\u00dd\7u\2\2\u00dd\u00de\7e\2\2\u00de\u00df\7j\2\2\u00df\u00e0\7g\2\2"+
		"\u00e0\u00e1\7o\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7\177\2\2\u00e3\u00e4"+
		"\7}\2\2\u00e4,\3\2\2\2\u00e5\u00e6\7^\2\2\u00e6\u00e7\7d\2\2\u00e7\u00e8"+
		"\7g\2\2\u00e8\u00e9\7i\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb\7p\2\2\u00eb"+
		"\u00ec\7}\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7z\2\2\u00ee\u00ef\7f\2\2"+
		"\u00ef\u00f0\7g\2\2\u00f0\u00f1\7h\2\2\u00f1\u00f2\7\177\2\2\u00f2.\3"+
		"\2\2\2\u00f3\u00f4\7v\2\2\u00f4\u00f5\7t\2\2\u00f5\u00f6\7w\2\2\u00f6"+
		"\u00f7\7g\2\2\u00f7\60\3\2\2\2\u00f8\u00f9\7^\2\2\u00f9\u00fa\7p\2\2\u00fa"+
		"\u00fb\7q\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7p\2\2"+
		"\u00fe\62\3\2\2\2\u00ff\u0100\7^\2\2\u0100\u0101\7u\2\2\u0101\u0102\7"+
		"w\2\2\u0102\u0103\7d\2\2\u0103\u0104\7u\2\2\u0104\u0105\7g\2\2\u0105\u0106"+
		"\7v\2\2\u0106\64\3\2\2\2\u0107\u0108\7^\2\2\u0108\u0109\7r\2\2\u0109\u010a"+
		"\7q\2\2\u010a\u010b\7y\2\2\u010b\u010c\7g\2\2\u010c\u010d\7t\2\2\u010d"+
		"\66\3\2\2\2\u010e\u010f\7+\2\2\u010f8\3\2\2\2\u0110\u0111\7^\2\2\u0111"+
		"\u0112\7k\2\2\u0112\u0113\7h\2\2\u0113\u0114\7h\2\2\u0114:\3\2\2\2\u0115"+
		"\u0116\7^\2\2\u0116\u0117\7n\2\2\u0117\u0118\7c\2\2\u0118\u0119\7p\2\2"+
		"\u0119\u011a\7f\2\2\u011a<\3\2\2\2\u011b\u011c\7^\2\2\u011c\u011d\7g\2"+
		"\2\u011d\u011e\7p\2\2\u011e\u011f\7f\2\2\u011f\u0120\7}\2\2\u0120\u0121"+
		"\7c\2\2\u0121\u0122\7z\2\2\u0122\u0123\7f\2\2\u0123\u0124\7g\2\2\u0124"+
		"\u0125\7h\2\2\u0125\u0126\7\177\2\2\u0126>\3\2\2\2\u0127\u0128\7B\2\2"+
		"\u0128@\3\2\2\2\u0129\u012a\7^\2\2\u012a\u012b\7k\2\2\u012b\u012c\7o\2"+
		"\2\u012c\u012d\7r\2\2\u012d\u012e\7n\2\2\u012e\u012f\7k\2\2\u012f\u0130"+
		"\7g\2\2\u0130\u0131\7u\2\2\u0131B\3\2\2\2\u0132\u0133\7^\2\2\u0133\u0134"+
		"\7h\2\2\u0134\u0135\7w\2\2\u0135\u0136\7p\2\2\u0136D\3\2\2\2\u0137\u0138"+
		"\7^\2\2\u0138\u0139\7u\2\2\u0139\u013a\7g\2\2\u013a\u013b\7s\2\2\u013b"+
		"F\3\2\2\2\u013c\u013d\7?\2\2\u013dH\3\2\2\2\u013e\u013f\7^\2\2\u013f\u0140"+
		"\7n\2\2\u0140\u0141\7g\2\2\u0141\u0142\7s\2\2\u0142J\3\2\2\2\u0143\u0144"+
		"\7=\2\2\u0144L\3\2\2\2\u0145\u0146\7^\2\2\u0146\u0147\7p\2\2\u0147\u0148"+
		"\7g\2\2\u0148\u0149\7s\2\2\u0149N\3\2\2\2\u014a\u014b\7^\2\2\u014b\u014c"+
		"\7p\2\2\u014c\u014d\7c\2\2\u014d\u014e\7v\2\2\u014eP\3\2\2\2\u014f\u0150"+
		"\7@\2\2\u0150R\3\2\2\2\u0151\u0152\7^\2\2\u0152\u0153\7i\2\2\u0153\u0154"+
		"\7g\2\2\u0154\u0155\7s\2\2\u0155T\3\2\2\2\u0156\u0157\7^\2\2\u0157\u0158"+
		"\7y\2\2\u0158\u0159\7j\2\2\u0159\u015a\7g\2\2\u015a\u015b\7t\2\2\u015b"+
		"\u015c\7g\2\2\u015cV\3\2\2\2\u015d\u015e\7^\2\2\u015e\u015f\7d\2\2\u015f"+
		"\u0160\7g\2\2\u0160\u0161\7i\2\2\u0161\u0162\7k\2\2\u0162\u0163\7p\2\2"+
		"\u0163\u0164\7}\2\2\u0164\u0165\7|\2\2\u0165\u0166\7g\2\2\u0166\u0167"+
		"\7f\2\2\u0167\u0168\7\177\2\2\u0168X\3\2\2\2\u0169\u016a\7^\2\2\u016a"+
		"\u016b\7p\2\2\u016b\u016c\7w\2\2\u016c\u016d\7o\2\2\u016dZ\3\2\2\2\u016e"+
		"\u016f\7?\2\2\u016f\u0170\7?\2\2\u0170\\\3\2\2\2\u0171\u0172\7\u0080\2"+
		"\2\u0172^\3\2\2\2\u0173\u0174\7<\2\2\u0174\u0175\7<\2\2\u0175\u0176\7"+
		"?\2\2\u0176`\3\2\2\2\u0177\u0178\7~\2\2\u0178b\3\2\2\2\u0179\u017a\7^"+
		"\2\2\u017a\u017b\7o\2\2\u017b\u017c\7c\2\2\u017c\u017d\7r\2\2\u017d\u017e"+
		"\7u\2\2\u017e\u017f\7v\2\2\u017f\u0180\7q\2\2\u0180d\3\2\2\2\u0181\u0187"+
		"\t\2\2\2\u0182\u0183\7^\2\2\u0183\u0184\7a\2\2\u0184\u0187\7\"\2\2\u0185"+
		"\u0187\7A\2\2\u0186\u0181\3\2\2\2\u0186\u0182\3\2\2\2\u0186\u0185\3\2"+
		"\2\2\u0187\u0188\3\2\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189"+
		"\u018d\3\2\2\2\u018a\u018c\4\62;\2\u018b\u018a\3\2\2\2\u018c\u018f\3\2"+
		"\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018ef\3\2\2\2\u018f\u018d"+
		"\3\2\2\2\u0190\u0192\4\62;\2\u0191\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193"+
		"\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194h\3\2\2\2\u0195\u019b\t\3\2\2"+
		"\u0196\u0197\7^\2\2\u0197\u0198\7e\2\2\u0198\u0199\7w\2\2\u0199\u019b"+
		"\7r\2\2\u019a\u0195\3\2\2\2\u019a\u0196\3\2\2\2\u019bj\3\2\2\2\u019c\u01aa"+
		"\7,\2\2\u019d\u019e\7^\2\2\u019e\u019f\7f\2\2\u019f\u01a0\7k\2\2\u01a0"+
		"\u01aa\7x\2\2\u01a1\u01a2\7^\2\2\u01a2\u01a3\7o\2\2\u01a3\u01a4\7q\2\2"+
		"\u01a4\u01aa\7f\2\2\u01a5\u01a6\7^\2\2\u01a6\u01a7\7e\2\2\u01a7\u01a8"+
		"\7c\2\2\u01a8\u01aa\7r\2\2\u01a9\u019c\3\2\2\2\u01a9\u019d\3\2\2\2\u01a9"+
		"\u01a1\3\2\2\2\u01a9\u01a5\3\2\2\2\u01aal\3\2\2\2\u01ab\u01ad\7\17\2\2"+
		"\u01ac\u01ab\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af"+
		"\7\f\2\2\u01afn\3\2\2\2\u01b0\u01b2\t\4\2\2\u01b1\u01b0\3\2\2\2\u01b2"+
		"\u01b3\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b5\3\2"+
		"\2\2\u01b5\u01b6\b8\2\2\u01b6p\3\2\2\2\u01b7\u01b8\7^\2\2\u01b8\u01b9"+
		"\7}\2\2\u01b9r\3\2\2\2\u01ba\u01bb\7^\2\2\u01bb\u01bc\7\177\2\2\u01bc"+
		"t\3\2\2\2\u01bd\u01be\7^\2\2\u01be\u01bf\7^\2\2\u01bf\u01c0\b;\3\2\u01c0"+
		"v\3\2\2\2\13\2\u0186\u0188\u018d\u0193\u019a\u01a9\u01ac\u01b3";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}