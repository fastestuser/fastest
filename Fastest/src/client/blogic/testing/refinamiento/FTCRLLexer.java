// Generated from FTCRL.g4 by ANTLR 4.0

package client.blogic.testing.refinamiento;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class FTCRLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__59=1, T__58=2, T__57=3, T__56=4, T__55=5, T__54=6, T__53=7, T__52=8, 
		T__51=9, T__50=10, T__49=11, T__48=12, T__47=13, T__46=14, T__45=15, T__44=16, 
		T__43=17, T__42=18, T__41=19, T__40=20, T__39=21, T__38=22, T__37=23, 
		T__36=24, T__35=25, T__34=26, T__33=27, T__32=28, T__31=29, T__30=30, 
		T__29=31, T__28=32, T__27=33, T__26=34, T__25=35, T__24=36, T__23=37, 
		T__22=38, T__21=39, T__20=40, T__19=41, T__18=42, T__17=43, T__16=44, 
		T__15=45, T__14=46, T__13=47, T__12=48, T__11=49, T__10=50, T__9=51, T__8=52, 
		T__7=53, T__6=54, T__5=55, T__4=56, T__3=57, T__2=58, T__1=59, T__0=60, 
		DIGIT=61, LETTER=62, NL=63, WS=64, ANYCHAR=65;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'@EPILOGUE'", "'DLL'", "'['", "'SLL'", "'AS'", "'@LAWS'", "'@PLCODE'", 
		"'REF['", "'\"'", "'0'", "'ran'", "'[]'", "'@UUT'", "'.@PREAMBLE'", "'ARRAY'", 
		"')'", "'âˆª'", "'_'", "'MAPVAL['", "'@'", "'ELEM'", "'.#'", "'div'", "'RECORD'", 
		"'WITH['", "'.*'", "'}'", "'.@EPILOGUE'", "']'", "','", "'('", "':'", 
		"'==>'", "'DCLL'", "'CLL'", "'?'", "'TABLE['", "'LIST'", "'dom'", "'@RRULE'", 
		"'@STR'", "'{'", "'\\\\beginJava'", "'MAPKEY['", "'@AUTOFILL'", "'++'", 
		"'\\\\endJava'", "'@PREAMBLE'", "'.'", "'ENUM'", "'<>'", "';'", "'.@LAWS'", 
		"'>'", "'MODULE'", "'.('", "'FILE['", "'=='", "'/'", "'#'", "DIGIT", "LETTER", 
		"'\n'", "WS", "ANYCHAR"
	};
	public static final String[] ruleNames = {
		"T__59", "T__58", "T__57", "T__56", "T__55", "T__54", "T__53", "T__52", 
		"T__51", "T__50", "T__49", "T__48", "T__47", "T__46", "T__45", "T__44", 
		"T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", "T__36", 
		"T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", 
		"T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", 
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "DIGIT", "LETTER", "NL", "WS", "ANYCHAR"
	};


	//Devuelve el valor, como string, obtenido del caso de prueba
	String getValor(String var) {
		if (var.equals("u?"))
			return "345";
		else if (var.equals("name?"))
			return "name0";
		else if (var.equals("n?"))
			return "n0";
		return "";
	}

	//Devuelve el tipo, como string, obtenido del codigo java
	String getType(String var) {
		if (var.equals("u?"))
			return "int";
		else if (var.equals("name?"))
			return "char *";
		else if (var.equals("n?"))
			return "char *";
			
		return "";
	}



	public FTCRLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "FTCRL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 63: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip(); break;
		}
	}

	public static final String _serializedATN =
		"\2\4C\u01b0\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\3\2\3\2\3\2\3"+
		"\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3"+
		"\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3&\3&\3&\3&\3&\3&\3&\3"+
		"\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+"+
		"\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3."+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62"+
		"\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\67\3\67\38\38\38\38\38\38\38\39\39\39\3:\3:\3:"+
		"\3:\3:\3:\3;\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\6A\u01a9\nA\rA\16"+
		"A\u01aa\3A\3A\3B\3B\2C\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21"+
		"\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1"+
		"%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\1"+
		"9\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1"+
		"Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65\1i\66\1k\67\1m8\1o9\1q:\1s"+
		";\1u<\1w=\1y>\1{?\1}@\1\177A\1\u0081B\2\u0083C\1\3\2\4\4C\\c|\6\13\13"+
		"\17\17\"\"\u0080\u0080\u01b0\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2"+
		"\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\3\u0085\3\2\2\2\5\u008f\3\2\2\2\7\u0093\3\2\2"+
		"\2\t\u0095\3\2\2\2\13\u0099\3\2\2\2\r\u009c\3\2\2\2\17\u00a2\3\2\2\2\21"+
		"\u00aa\3\2\2\2\23\u00af\3\2\2\2\25\u00b1\3\2\2\2\27\u00b3\3\2\2\2\31\u00b7"+
		"\3\2\2\2\33\u00ba\3\2\2\2\35\u00bf\3\2\2\2\37\u00ca\3\2\2\2!\u00d0\3\2"+
		"\2\2#\u00d2\3\2\2\2%\u00d4\3\2\2\2\'\u00d6\3\2\2\2)\u00de\3\2\2\2+\u00e0"+
		"\3\2\2\2-\u00e5\3\2\2\2/\u00e8\3\2\2\2\61\u00ec\3\2\2\2\63\u00f3\3\2\2"+
		"\2\65\u00f9\3\2\2\2\67\u00fc\3\2\2\29\u00ff\3\2\2\2;\u010a\3\2\2\2=\u010c"+
		"\3\2\2\2?\u010e\3\2\2\2A\u0110\3\2\2\2C\u0112\3\2\2\2E\u0116\3\2\2\2G"+
		"\u011b\3\2\2\2I\u011f\3\2\2\2K\u0121\3\2\2\2M\u0128\3\2\2\2O\u012d\3\2"+
		"\2\2Q\u0131\3\2\2\2S\u0138\3\2\2\2U\u013d\3\2\2\2W\u0140\3\2\2\2Y\u014c"+
		"\3\2\2\2[\u0154\3\2\2\2]\u015e\3\2\2\2_\u0161\3\2\2\2a\u016b\3\2\2\2c"+
		"\u0175\3\2\2\2e\u0177\3\2\2\2g\u017c\3\2\2\2i\u017f\3\2\2\2k\u0181\3\2"+
		"\2\2m\u0188\3\2\2\2o\u018a\3\2\2\2q\u0191\3\2\2\2s\u0194\3\2\2\2u\u019a"+
		"\3\2\2\2w\u019d\3\2\2\2y\u019f\3\2\2\2{\u01a1\3\2\2\2}\u01a3\3\2\2\2\177"+
		"\u01a5\3\2\2\2\u0081\u01a8\3\2\2\2\u0083\u01ae\3\2\2\2\u0085\u0086\7B"+
		"\2\2\u0086\u0087\7G\2\2\u0087\u0088\7R\2\2\u0088\u0089\7K\2\2\u0089\u008a"+
		"\7N\2\2\u008a\u008b\7Q\2\2\u008b\u008c\7I\2\2\u008c\u008d\7W\2\2\u008d"+
		"\u008e\7G\2\2\u008e\4\3\2\2\2\u008f\u0090\7F\2\2\u0090\u0091\7N\2\2\u0091"+
		"\u0092\7N\2\2\u0092\6\3\2\2\2\u0093\u0094\7]\2\2\u0094\b\3\2\2\2\u0095"+
		"\u0096\7U\2\2\u0096\u0097\7N\2\2\u0097\u0098\7N\2\2\u0098\n\3\2\2\2\u0099"+
		"\u009a\7C\2\2\u009a\u009b\7U\2\2\u009b\f\3\2\2\2\u009c\u009d\7B\2\2\u009d"+
		"\u009e\7N\2\2\u009e\u009f\7C\2\2\u009f\u00a0\7Y\2\2\u00a0\u00a1\7U\2\2"+
		"\u00a1\16\3\2\2\2\u00a2\u00a3\7B\2\2\u00a3\u00a4\7R\2\2\u00a4\u00a5\7"+
		"N\2\2\u00a5\u00a6\7E\2\2\u00a6\u00a7\7Q\2\2\u00a7\u00a8\7F\2\2\u00a8\u00a9"+
		"\7G\2\2\u00a9\20\3\2\2\2\u00aa\u00ab\7T\2\2\u00ab\u00ac\7G\2\2\u00ac\u00ad"+
		"\7H\2\2\u00ad\u00ae\7]\2\2\u00ae\22\3\2\2\2\u00af\u00b0\7$\2\2\u00b0\24"+
		"\3\2\2\2\u00b1\u00b2\7\62\2\2\u00b2\26\3\2\2\2\u00b3\u00b4\7t\2\2\u00b4"+
		"\u00b5\7c\2\2\u00b5\u00b6\7p\2\2\u00b6\30\3\2\2\2\u00b7\u00b8\7]\2\2\u00b8"+
		"\u00b9\7_\2\2\u00b9\32\3\2\2\2\u00ba\u00bb\7B\2\2\u00bb\u00bc\7W\2\2\u00bc"+
		"\u00bd\7W\2\2\u00bd\u00be\7V\2\2\u00be\34\3\2\2\2\u00bf\u00c0\7\60\2\2"+
		"\u00c0\u00c1\7B\2\2\u00c1\u00c2\7R\2\2\u00c2\u00c3\7T\2\2\u00c3\u00c4"+
		"\7G\2\2\u00c4\u00c5\7C\2\2\u00c5\u00c6\7O\2\2\u00c6\u00c7\7D\2\2\u00c7"+
		"\u00c8\7N\2\2\u00c8\u00c9\7G\2\2\u00c9\36\3\2\2\2\u00ca\u00cb\7C\2\2\u00cb"+
		"\u00cc\7T\2\2\u00cc\u00cd\7T\2\2\u00cd\u00ce\7C\2\2\u00ce\u00cf\7[\2\2"+
		"\u00cf \3\2\2\2\u00d0\u00d1\7+\2\2\u00d1\"\3\2\2\2\u00d2\u00d3\7\u222c"+
		"\2\2\u00d3$\3\2\2\2\u00d4\u00d5\7a\2\2\u00d5&\3\2\2\2\u00d6\u00d7\7O\2"+
		"\2\u00d7\u00d8\7C\2\2\u00d8\u00d9\7R\2\2\u00d9\u00da\7X\2\2\u00da\u00db"+
		"\7C\2\2\u00db\u00dc\7N\2\2\u00dc\u00dd\7]\2\2\u00dd(\3\2\2\2\u00de\u00df"+
		"\7B\2\2\u00df*\3\2\2\2\u00e0\u00e1\7G\2\2\u00e1\u00e2\7N\2\2\u00e2\u00e3"+
		"\7G\2\2\u00e3\u00e4\7O\2\2\u00e4,\3\2\2\2\u00e5\u00e6\7\60\2\2\u00e6\u00e7"+
		"\7%\2\2\u00e7.\3\2\2\2\u00e8\u00e9\7f\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb"+
		"\7x\2\2\u00eb\60\3\2\2\2\u00ec\u00ed\7T\2\2\u00ed\u00ee\7G\2\2\u00ee\u00ef"+
		"\7E\2\2\u00ef\u00f0\7Q\2\2\u00f0\u00f1\7T\2\2\u00f1\u00f2\7F\2\2\u00f2"+
		"\62\3\2\2\2\u00f3\u00f4\7Y\2\2\u00f4\u00f5\7K\2\2\u00f5\u00f6\7V\2\2\u00f6"+
		"\u00f7\7J\2\2\u00f7\u00f8\7]\2\2\u00f8\64\3\2\2\2\u00f9\u00fa\7\60\2\2"+
		"\u00fa\u00fb\7,\2\2\u00fb\66\3\2\2\2\u00fc\u00fd\7^\2\2\u00fd\u00fe\7"+
		"\177\2\2\u00fe8\3\2\2\2\u00ff\u0100\7\60\2\2\u0100\u0101\7B\2\2\u0101"+
		"\u0102\7G\2\2\u0102\u0103\7R\2\2\u0103\u0104\7K\2\2\u0104\u0105\7N\2\2"+
		"\u0105\u0106\7Q\2\2\u0106\u0107\7I\2\2\u0107\u0108\7W\2\2\u0108\u0109"+
		"\7G\2\2\u0109:\3\2\2\2\u010a\u010b\7_\2\2\u010b<\3\2\2\2\u010c\u010d\7"+
		".\2\2\u010d>\3\2\2\2\u010e\u010f\7*\2\2\u010f@\3\2\2\2\u0110\u0111\7<"+
		"\2\2\u0111B\3\2\2\2\u0112\u0113\7?\2\2\u0113\u0114\7?\2\2\u0114\u0115"+
		"\7@\2\2\u0115D\3\2\2\2\u0116\u0117\7F\2\2\u0117\u0118\7E\2\2\u0118\u0119"+
		"\7N\2\2\u0119\u011a\7N\2\2\u011aF\3\2\2\2\u011b\u011c\7E\2\2\u011c\u011d"+
		"\7N\2\2\u011d\u011e\7N\2\2\u011eH\3\2\2\2\u011f\u0120\7A\2\2\u0120J\3"+
		"\2\2\2\u0121\u0122\7V\2\2\u0122\u0123\7C\2\2\u0123\u0124\7D\2\2\u0124"+
		"\u0125\7N\2\2\u0125\u0126\7G\2\2\u0126\u0127\7]\2\2\u0127L\3\2\2\2\u0128"+
		"\u0129\7N\2\2\u0129\u012a\7K\2\2\u012a\u012b\7U\2\2\u012b\u012c\7V\2\2"+
		"\u012cN\3\2\2\2\u012d\u012e\7f\2\2\u012e\u012f\7q\2\2\u012f\u0130\7o\2"+
		"\2\u0130P\3\2\2\2\u0131\u0132\7B\2\2\u0132\u0133\7T\2\2\u0133\u0134\7"+
		"T\2\2\u0134\u0135\7W\2\2\u0135\u0136\7N\2\2\u0136\u0137\7G\2\2\u0137R"+
		"\3\2\2\2\u0138\u0139\7B\2\2\u0139\u013a\7U\2\2\u013a\u013b\7V\2\2\u013b"+
		"\u013c\7T\2\2\u013cT\3\2\2\2\u013d\u013e\7^\2\2\u013e\u013f\7}\2\2\u013f"+
		"V\3\2\2\2\u0140\u0141\7^\2\2\u0141\u0142\7^\2\2\u0142\u0143\7d\2\2\u0143"+
		"\u0144\7g\2\2\u0144\u0145\7i\2\2\u0145\u0146\7k\2\2\u0146\u0147\7p\2\2"+
		"\u0147\u0148\7L\2\2\u0148\u0149\7c\2\2\u0149\u014a\7x\2\2\u014a\u014b"+
		"\7c\2\2\u014bX\3\2\2\2\u014c\u014d\7O\2\2\u014d\u014e\7C\2\2\u014e\u014f"+
		"\7R\2\2\u014f\u0150\7M\2\2\u0150\u0151\7G\2\2\u0151\u0152\7[\2\2\u0152"+
		"\u0153\7]\2\2\u0153Z\3\2\2\2\u0154\u0155\7B\2\2\u0155\u0156\7C\2\2\u0156"+
		"\u0157\7W\2\2\u0157\u0158\7V\2\2\u0158\u0159\7Q\2\2\u0159\u015a\7H\2\2"+
		"\u015a\u015b\7K\2\2\u015b\u015c\7N\2\2\u015c\u015d\7N\2\2\u015d\\\3\2"+
		"\2\2\u015e\u015f\7-\2\2\u015f\u0160\7-\2\2\u0160^\3\2\2\2\u0161\u0162"+
		"\7^\2\2\u0162\u0163\7^\2\2\u0163\u0164\7g\2\2\u0164\u0165\7p\2\2\u0165"+
		"\u0166\7f\2\2\u0166\u0167\7L\2\2\u0167\u0168\7c\2\2\u0168\u0169\7x\2\2"+
		"\u0169\u016a\7c\2\2\u016a`\3\2\2\2\u016b\u016c\7B\2\2\u016c\u016d\7R\2"+
		"\2\u016d\u016e\7T\2\2\u016e\u016f\7G\2\2\u016f\u0170\7C\2\2\u0170\u0171"+
		"\7O\2\2\u0171\u0172\7D\2\2\u0172\u0173\7N\2\2\u0173\u0174\7G\2\2\u0174"+
		"b\3\2\2\2\u0175\u0176\7\60\2\2\u0176d\3\2\2\2\u0177\u0178\7G\2\2\u0178"+
		"\u0179\7P\2\2\u0179\u017a\7W\2\2\u017a\u017b\7O\2\2\u017bf\3\2\2\2\u017c"+
		"\u017d\7>\2\2\u017d\u017e\7@\2\2\u017eh\3\2\2\2\u017f\u0180\7=\2\2\u0180"+
		"j\3\2\2\2\u0181\u0182\7\60\2\2\u0182\u0183\7B\2\2\u0183\u0184\7N\2\2\u0184"+
		"\u0185\7C\2\2\u0185\u0186\7Y\2\2\u0186\u0187\7U\2\2\u0187l\3\2\2\2\u0188"+
		"\u0189\7@\2\2\u0189n\3\2\2\2\u018a\u018b\7O\2\2\u018b\u018c\7Q\2\2\u018c"+
		"\u018d\7F\2\2\u018d\u018e\7W\2\2\u018e\u018f\7N\2\2\u018f\u0190\7G\2\2"+
		"\u0190p\3\2\2\2\u0191\u0192\7\60\2\2\u0192\u0193\7*\2\2\u0193r\3\2\2\2"+
		"\u0194\u0195\7H\2\2\u0195\u0196\7K\2\2\u0196\u0197\7N\2\2\u0197\u0198"+
		"\7G\2\2\u0198\u0199\7]\2\2\u0199t\3\2\2\2\u019a\u019b\7?\2\2\u019b\u019c"+
		"\7?\2\2\u019cv\3\2\2\2\u019d\u019e\7\61\2\2\u019ex\3\2\2\2\u019f\u01a0"+
		"\7%\2\2\u01a0z\3\2\2\2\u01a1\u01a2\4\63;\2\u01a2|\3\2\2\2\u01a3\u01a4"+
		"\t\2\2\2\u01a4~\3\2\2\2\u01a5\u01a6\7\f\2\2\u01a6\u0080\3\2\2\2\u01a7"+
		"\u01a9\t\3\2\2\u01a8\u01a7\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aa\u01a8\3\2"+
		"\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01ad\bA\2\2\u01ad"+
		"\u0082\3\2\2\2\u01ae\u01af\13\2\2\2\u01af\u0084\3\2\2\2\4\2\u01aa";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}