// Generated from /home/cristian/workspace/fastest/atcal2/src/main/java/org/fastest/atcal/Atcal.g4 by ANTLR 4.5
package org.fastest.atcal.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AtcalLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, STMTEND=40, ID=41, NUMBER=42, PLUS=43, MINUS=44, MUL=45, DIV=46, 
		MOD=47, DOM=48, RAN=49, PROJ=50, TUPPROJ=51, INTER=52, UNION=53, DIFF=54, 
		STRING=55, WS=56;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "STMTEND", "SEMICOLON", 
		"ID", "ID_LETTER", "DIGIT", "NUMBER", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
		"DOM", "RAN", "PROJ", "TUPPROJ", "INTER", "UNION", "DIFF", "STRING", "ESC", 
		"WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'@RRULE'", "'@PREAMBLE'", "'@PLCODE'", "'.@PREAMBLE'", "'@DATATYPES'", 
		"'DATATYPE'", "'='", "'INT'", "'FLOAT'", "'STRING'", "'ARRAY'", "'('", 
		"')'", "'ENUM'", "'RECORD'", "':'", "','", "'CONSTRUCTOR'", "'SETTER'", 
		"'GETTER'", "'MAP'", "'['", "']'", "'->'", "'@LAWS'", "'@UUT'", "'@EPILOGUE'", 
		"'.@EPILOGUE'", "'==>'", "'AS'", "'WITH'", "'@AUTOFILL'", "'.'", "'<'", 
		"'>'", "'{'", "'}'", "'.@CARD'", "'++'", null, null, null, "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'@DOM'", "'@RAN'", null, null, "'/\\'", "'\\/'", 
		"'~'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "STMTEND", "ID", "NUMBER", "PLUS", "MINUS", "MUL", 
		"DIV", "MOD", "DOM", "RAN", "PROJ", "TUPPROJ", "INTER", "UNION", "DIFF", 
		"STRING", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override
	@NotNull
	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AtcalLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Atcal.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2:\u019d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3"+
		"\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3(\3(\3(\3)\6)\u0151\n)\r)\16)\u0152\3*\3*\3+\3+\3+\7+\u015a\n"+
		"+\f+\16+\u015d\13+\3,\3,\3-\3-\3.\6.\u0164\n.\r.\16.\u0165\3/\3/\3\60"+
		"\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65"+
		"\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\39\3:\3:"+
		"\3;\3;\3;\7;\u018d\n;\f;\16;\u0190\13;\3;\3;\3<\3<\3<\3=\6=\u0198\n=\r"+
		"=\16=\u0199\3=\3=\3\u018e\2>\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S\2U+W\2Y\2[,]-_"+
		".a/c\60e\61g\62i\63k\64m\65o\66q\67s8u9w\2y:\3\2\5\5\2C\\aac|\b\2$$^^"+
		"ddppttvv\5\2\13\f\17\17\"\"\u019f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2"+
		"\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2U\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2y\3\2\2\2\3{\3\2\2\2\5"+
		"\u0082\3\2\2\2\7\u008c\3\2\2\2\t\u0094\3\2\2\2\13\u009f\3\2\2\2\r\u00aa"+
		"\3\2\2\2\17\u00b3\3\2\2\2\21\u00b5\3\2\2\2\23\u00b9\3\2\2\2\25\u00bf\3"+
		"\2\2\2\27\u00c6\3\2\2\2\31\u00cc\3\2\2\2\33\u00ce\3\2\2\2\35\u00d0\3\2"+
		"\2\2\37\u00d5\3\2\2\2!\u00dc\3\2\2\2#\u00de\3\2\2\2%\u00e0\3\2\2\2\'\u00ec"+
		"\3\2\2\2)\u00f3\3\2\2\2+\u00fa\3\2\2\2-\u00fe\3\2\2\2/\u0100\3\2\2\2\61"+
		"\u0102\3\2\2\2\63\u0105\3\2\2\2\65\u010b\3\2\2\2\67\u0110\3\2\2\29\u011a"+
		"\3\2\2\2;\u0125\3\2\2\2=\u0129\3\2\2\2?\u012c\3\2\2\2A\u0131\3\2\2\2C"+
		"\u013b\3\2\2\2E\u013d\3\2\2\2G\u013f\3\2\2\2I\u0141\3\2\2\2K\u0143\3\2"+
		"\2\2M\u0145\3\2\2\2O\u014c\3\2\2\2Q\u0150\3\2\2\2S\u0154\3\2\2\2U\u0156"+
		"\3\2\2\2W\u015e\3\2\2\2Y\u0160\3\2\2\2[\u0163\3\2\2\2]\u0167\3\2\2\2_"+
		"\u0169\3\2\2\2a\u016b\3\2\2\2c\u016d\3\2\2\2e\u016f\3\2\2\2g\u0171\3\2"+
		"\2\2i\u0176\3\2\2\2k\u017b\3\2\2\2m\u017e\3\2\2\2o\u0181\3\2\2\2q\u0184"+
		"\3\2\2\2s\u0187\3\2\2\2u\u0189\3\2\2\2w\u0193\3\2\2\2y\u0197\3\2\2\2{"+
		"|\7B\2\2|}\7T\2\2}~\7T\2\2~\177\7W\2\2\177\u0080\7N\2\2\u0080\u0081\7"+
		"G\2\2\u0081\4\3\2\2\2\u0082\u0083\7B\2\2\u0083\u0084\7R\2\2\u0084\u0085"+
		"\7T\2\2\u0085\u0086\7G\2\2\u0086\u0087\7C\2\2\u0087\u0088\7O\2\2\u0088"+
		"\u0089\7D\2\2\u0089\u008a\7N\2\2\u008a\u008b\7G\2\2\u008b\6\3\2\2\2\u008c"+
		"\u008d\7B\2\2\u008d\u008e\7R\2\2\u008e\u008f\7N\2\2\u008f\u0090\7E\2\2"+
		"\u0090\u0091\7Q\2\2\u0091\u0092\7F\2\2\u0092\u0093\7G\2\2\u0093\b\3\2"+
		"\2\2\u0094\u0095\7\60\2\2\u0095\u0096\7B\2\2\u0096\u0097\7R\2\2\u0097"+
		"\u0098\7T\2\2\u0098\u0099\7G\2\2\u0099\u009a\7C\2\2\u009a\u009b\7O\2\2"+
		"\u009b\u009c\7D\2\2\u009c\u009d\7N\2\2\u009d\u009e\7G\2\2\u009e\n\3\2"+
		"\2\2\u009f\u00a0\7B\2\2\u00a0\u00a1\7F\2\2\u00a1\u00a2\7C\2\2\u00a2\u00a3"+
		"\7V\2\2\u00a3\u00a4\7C\2\2\u00a4\u00a5\7V\2\2\u00a5\u00a6\7[\2\2\u00a6"+
		"\u00a7\7R\2\2\u00a7\u00a8\7G\2\2\u00a8\u00a9\7U\2\2\u00a9\f\3\2\2\2\u00aa"+
		"\u00ab\7F\2\2\u00ab\u00ac\7C\2\2\u00ac\u00ad\7V\2\2\u00ad\u00ae\7C\2\2"+
		"\u00ae\u00af\7V\2\2\u00af\u00b0\7[\2\2\u00b0\u00b1\7R\2\2\u00b1\u00b2"+
		"\7G\2\2\u00b2\16\3\2\2\2\u00b3\u00b4\7?\2\2\u00b4\20\3\2\2\2\u00b5\u00b6"+
		"\7K\2\2\u00b6\u00b7\7P\2\2\u00b7\u00b8\7V\2\2\u00b8\22\3\2\2\2\u00b9\u00ba"+
		"\7H\2\2\u00ba\u00bb\7N\2\2\u00bb\u00bc\7Q\2\2\u00bc\u00bd\7C\2\2\u00bd"+
		"\u00be\7V\2\2\u00be\24\3\2\2\2\u00bf\u00c0\7U\2\2\u00c0\u00c1\7V\2\2\u00c1"+
		"\u00c2\7T\2\2\u00c2\u00c3\7K\2\2\u00c3\u00c4\7P\2\2\u00c4\u00c5\7I\2\2"+
		"\u00c5\26\3\2\2\2\u00c6\u00c7\7C\2\2\u00c7\u00c8\7T\2\2\u00c8\u00c9\7"+
		"T\2\2\u00c9\u00ca\7C\2\2\u00ca\u00cb\7[\2\2\u00cb\30\3\2\2\2\u00cc\u00cd"+
		"\7*\2\2\u00cd\32\3\2\2\2\u00ce\u00cf\7+\2\2\u00cf\34\3\2\2\2\u00d0\u00d1"+
		"\7G\2\2\u00d1\u00d2\7P\2\2\u00d2\u00d3\7W\2\2\u00d3\u00d4\7O\2\2\u00d4"+
		"\36\3\2\2\2\u00d5\u00d6\7T\2\2\u00d6\u00d7\7G\2\2\u00d7\u00d8\7E\2\2\u00d8"+
		"\u00d9\7Q\2\2\u00d9\u00da\7T\2\2\u00da\u00db\7F\2\2\u00db \3\2\2\2\u00dc"+
		"\u00dd\7<\2\2\u00dd\"\3\2\2\2\u00de\u00df\7.\2\2\u00df$\3\2\2\2\u00e0"+
		"\u00e1\7E\2\2\u00e1\u00e2\7Q\2\2\u00e2\u00e3\7P\2\2\u00e3\u00e4\7U\2\2"+
		"\u00e4\u00e5\7V\2\2\u00e5\u00e6\7T\2\2\u00e6\u00e7\7W\2\2\u00e7\u00e8"+
		"\7E\2\2\u00e8\u00e9\7V\2\2\u00e9\u00ea\7Q\2\2\u00ea\u00eb\7T\2\2\u00eb"+
		"&\3\2\2\2\u00ec\u00ed\7U\2\2\u00ed\u00ee\7G\2\2\u00ee\u00ef\7V\2\2\u00ef"+
		"\u00f0\7V\2\2\u00f0\u00f1\7G\2\2\u00f1\u00f2\7T\2\2\u00f2(\3\2\2\2\u00f3"+
		"\u00f4\7I\2\2\u00f4\u00f5\7G\2\2\u00f5\u00f6\7V\2\2\u00f6\u00f7\7V\2\2"+
		"\u00f7\u00f8\7G\2\2\u00f8\u00f9\7T\2\2\u00f9*\3\2\2\2\u00fa\u00fb\7O\2"+
		"\2\u00fb\u00fc\7C\2\2\u00fc\u00fd\7R\2\2\u00fd,\3\2\2\2\u00fe\u00ff\7"+
		"]\2\2\u00ff.\3\2\2\2\u0100\u0101\7_\2\2\u0101\60\3\2\2\2\u0102\u0103\7"+
		"/\2\2\u0103\u0104\7@\2\2\u0104\62\3\2\2\2\u0105\u0106\7B\2\2\u0106\u0107"+
		"\7N\2\2\u0107\u0108\7C\2\2\u0108\u0109\7Y\2\2\u0109\u010a\7U\2\2\u010a"+
		"\64\3\2\2\2\u010b\u010c\7B\2\2\u010c\u010d\7W\2\2\u010d\u010e\7W\2\2\u010e"+
		"\u010f\7V\2\2\u010f\66\3\2\2\2\u0110\u0111\7B\2\2\u0111\u0112\7G\2\2\u0112"+
		"\u0113\7R\2\2\u0113\u0114\7K\2\2\u0114\u0115\7N\2\2\u0115\u0116\7Q\2\2"+
		"\u0116\u0117\7I\2\2\u0117\u0118\7W\2\2\u0118\u0119\7G\2\2\u01198\3\2\2"+
		"\2\u011a\u011b\7\60\2\2\u011b\u011c\7B\2\2\u011c\u011d\7G\2\2\u011d\u011e"+
		"\7R\2\2\u011e\u011f\7K\2\2\u011f\u0120\7N\2\2\u0120\u0121\7Q\2\2\u0121"+
		"\u0122\7I\2\2\u0122\u0123\7W\2\2\u0123\u0124\7G\2\2\u0124:\3\2\2\2\u0125"+
		"\u0126\7?\2\2\u0126\u0127\7?\2\2\u0127\u0128\7@\2\2\u0128<\3\2\2\2\u0129"+
		"\u012a\7C\2\2\u012a\u012b\7U\2\2\u012b>\3\2\2\2\u012c\u012d\7Y\2\2\u012d"+
		"\u012e\7K\2\2\u012e\u012f\7V\2\2\u012f\u0130\7J\2\2\u0130@\3\2\2\2\u0131"+
		"\u0132\7B\2\2\u0132\u0133\7C\2\2\u0133\u0134\7W\2\2\u0134\u0135\7V\2\2"+
		"\u0135\u0136\7Q\2\2\u0136\u0137\7H\2\2\u0137\u0138\7K\2\2\u0138\u0139"+
		"\7N\2\2\u0139\u013a\7N\2\2\u013aB\3\2\2\2\u013b\u013c\7\60\2\2\u013cD"+
		"\3\2\2\2\u013d\u013e\7>\2\2\u013eF\3\2\2\2\u013f\u0140\7@\2\2\u0140H\3"+
		"\2\2\2\u0141\u0142\7}\2\2\u0142J\3\2\2\2\u0143\u0144\7\177\2\2\u0144L"+
		"\3\2\2\2\u0145\u0146\7\60\2\2\u0146\u0147\7B\2\2\u0147\u0148\7E\2\2\u0148"+
		"\u0149\7C\2\2\u0149\u014a\7T\2\2\u014a\u014b\7F\2\2\u014bN\3\2\2\2\u014c"+
		"\u014d\7-\2\2\u014d\u014e\7-\2\2\u014eP\3\2\2\2\u014f\u0151\5S*\2\u0150"+
		"\u014f\3\2\2\2\u0151\u0152\3\2\2\2\u0152\u0150\3\2\2\2\u0152\u0153\3\2"+
		"\2\2\u0153R\3\2\2\2\u0154\u0155\7=\2\2\u0155T\3\2\2\2\u0156\u015b\5W,"+
		"\2\u0157\u015a\5W,\2\u0158\u015a\5Y-\2\u0159\u0157\3\2\2\2\u0159\u0158"+
		"\3\2\2\2\u015a\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"V\3\2\2\2\u015d\u015b\3\2\2\2\u015e\u015f\t\2\2\2\u015fX\3\2\2\2\u0160"+
		"\u0161\4\62;\2\u0161Z\3\2\2\2\u0162\u0164\5Y-\2\u0163\u0162\3\2\2\2\u0164"+
		"\u0165\3\2\2\2\u0165\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166\\\3\2\2\2"+
		"\u0167\u0168\7-\2\2\u0168^\3\2\2\2\u0169\u016a\7/\2\2\u016a`\3\2\2\2\u016b"+
		"\u016c\7,\2\2\u016cb\3\2\2\2\u016d\u016e\7\61\2\2\u016ed\3\2\2\2\u016f"+
		"\u0170\7\'\2\2\u0170f\3\2\2\2\u0171\u0172\7B\2\2\u0172\u0173\7F\2\2\u0173"+
		"\u0174\7Q\2\2\u0174\u0175\7O\2\2\u0175h\3\2\2\2\u0176\u0177\7B\2\2\u0177"+
		"\u0178\7T\2\2\u0178\u0179\7C\2\2\u0179\u017a\7P\2\2\u017aj\3\2\2\2\u017b"+
		"\u017c\7B\2\2\u017c\u017d\5[.\2\u017dl\3\2\2\2\u017e\u017f\7%\2\2\u017f"+
		"\u0180\5[.\2\u0180n\3\2\2\2\u0181\u0182\7\61\2\2\u0182\u0183\7^\2\2\u0183"+
		"p\3\2\2\2\u0184\u0185\7^\2\2\u0185\u0186\7\61\2\2\u0186r\3\2\2\2\u0187"+
		"\u0188\7\u0080\2\2\u0188t\3\2\2\2\u0189\u018e\7$\2\2\u018a\u018d\5w<\2"+
		"\u018b\u018d\13\2\2\2\u018c\u018a\3\2\2\2\u018c\u018b\3\2\2\2\u018d\u0190"+
		"\3\2\2\2\u018e\u018f\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0191\3\2\2\2\u0190"+
		"\u018e\3\2\2\2\u0191\u0192\7$\2\2\u0192v\3\2\2\2\u0193\u0194\7^\2\2\u0194"+
		"\u0195\t\3\2\2\u0195x\3\2\2\2\u0196\u0198\t\4\2\2\u0197\u0196\3\2\2\2"+
		"\u0198\u0199\3\2\2\2\u0199\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b"+
		"\3\2\2\2\u019b\u019c\b=\2\2\u019cz\3\2\2\2\n\2\u0152\u0159\u015b\u0165"+
		"\u018c\u018e\u0199\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}